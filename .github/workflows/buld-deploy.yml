name: Build and Deploy Code

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:

jobs: 
  job1: 
    environment:
      name: testing 
    env:
      DATABASE_HOSTNAME: ${{ secrets.DATABASE_HOSTNAME }}
      DATABASE_PORT: ${{ secrets.DATABASE_PORT }}
      DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
      DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
      DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
      SECRET_KEY: ${{secrets.SECRET_KEY }}
      ALGORITHM: ${{ secrets.ALGORITHM }}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${{ secrets.ACCESS_TOKEN_EXPIRE_MINUTES }}
    services:
      postgres:
        image: postgres
        env: 
          POSTGRES_PASSWORD:  ${{ secrets.DATABASE_PASSWORD }}
          POSTGRES_DB: ${{ secrets.DATABASE_NAME }}_test
        ports: 
          - 5432:5432 
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    runs-on: ubuntu-latest    #  specify the Operating System
    strategy:
      matrix:
        python-version:: [ '3.x', '2.x']
       #  architecture: 'x64' 
    steps:
      - name: Pulling git  repo 
        uses: actions/checkout@v2 
      - name: say hi to Salih
        run: echo "Hello Salih !"
      - name: Set up PYTHON
        uses: actions/setup-python@v2
      - name: update pip
        run: |
          python -m pip install --upgrade pip
      - name: install all dependencies
        run: pip install -r requirements.txt 
      - name: test with pytest
        run: |
          pip install pytest
          echo 'pytest installed :-) '

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/fastapi:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
  job2:
    needs: job1
    runs-on: ubuntu-20.04    #  specify the Operating System
    steps:
      - name: Pulling git  repo 
        uses: actions/checkout@v2 
      - name: say hi to Wiesbaden
        run: echo "Hello Wiesbaden !"
  job3:
    needs: job2
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [ '1.14', '1.15', '1.16.x' ]
    steps:
      - uses: actions/checkout@v3
      - name: Setup Go ${{ matrix.go-version }}
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
      # You can test your matrix by printing the current Go version
      - name: Display Go version
        run: go version